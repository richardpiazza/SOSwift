import Foundation

/// Content features of the resource, such as accessible media, supported enhancements for accessibility and
/// alternatives.
public enum AccessibilityFeature: String, CaseIterable, Codable {
    case alternativeText = "alternativeText"
    case annotations = "annotations"
    case audioDescription = "audioDescription"
    case bookmarks = "bookmarks"
    case braille = "braille"
    case captions = "captions"
    case chemML = "ChemML"
    case describedMath = "describedMath"
    case displayTransformability = "displayTransformability"
    case highContrastAudio = "highContrastAudio"
    case highContrastDisplay = "highContrastDisplay"
    case index = "index"
    case largePrint = "largePrint"
    case latex = "latex"
    case longDescription = "longDescription"
    case mathML = "MathML"
    case none = "none"
    case printPageNumbers = "printPageNumbers"
    case readingOrder = "readingOrder"
    case rubyAnnotations = "rubyAnnotations"
    case signLanguage = "signLanguage"
    case structuralNavigation = "structuralNavigation"
    case synchronizedAudioText = "synchronizedAudioText"
    case tableOfContents = "tableOfContents"
    case taggedPDF = "taggedPDF"
    case tactileGraphic = "tactileGraphic"
    case tactileObject = "tactileObject"
    case timingControl = "timingControl"
    case transcript = "transcript"
    case ttsMarkup = "ttsMarkup"
    case unlocked = "unlocked"
    
    public var displayValue: String {
        switch self {
        case .alternativeText: return "Alternative Text"
        case .annotations: return "Annotations"
        case .audioDescription: return "Audio Description"
        case .bookmarks: return "Bookmarks"
        case .braille: return "Braille"
        case .captions: return "Captions"
        case .chemML: return "Chemical Markup Language"
        case .describedMath: return "Described Math"
        case .displayTransformability: return "Display Transformability"
        case .highContrastAudio: return "High Contrast Audio"
        case .highContrastDisplay: return "High Contrast Display"
        case .index: return "Index"
        case .largePrint: return "Large Print"
        case .latex: return "Lamport TeX"
        case .longDescription: return "Long Description"
        case .mathML: return "Math Markup Language"
        case .none: return "None"
        case .printPageNumbers: return "Print Page Numbers"
        case .readingOrder: return "Reading Order"
        case .rubyAnnotations: return "Ruby Annotations"
        case .signLanguage: return "Sign Language"
        case .structuralNavigation: return "Structural Navigation"
        case .synchronizedAudioText: return "Synchronized Audio Text"
        case .tableOfContents: return "Table Of Contents"
        case .taggedPDF: return "Tagged PDF"
        case .tactileGraphic: return "Tactile Graphic"
        case .tactileObject: return "Tactile Object"
        case .timingControl: return "Timing Control"
        case .transcript: return "Transcript"
        case .ttsMarkup: return "TTS Markup"
        case .unlocked: return "Unlocked"
        }
    }
}
